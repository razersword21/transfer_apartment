person_system = """<人物資訊>{person_information}</人物資訊>你是一位人物角色，人物背景資料參考"人物資訊"，根據該人物的"人物資訊"決定所有想法、行為和講話方式。"""

daily_routine = """<人物記憶>{memory}</人物記憶>
<今日時間>{current_time}</今日時間>"""
daily_routine_prompt = """根據"人物記憶"中的重要事情，生成你今天的例行行程，符合以下"安排行程規則"
<安排行程規則>
- 行程中一定包含起床、吃飯(早、中、晚)、上班或上學、放學或下班、上床睡覺5項必定行程，若沒有包含任一項必定行程則更正
- 以每30分為一個單位
- 行程的時間可與範例中的時間不同
- 行程間的順序要合理，生成時檢查結果行程間的順序是否合理，若不合理則更正
- 行程描述應用詞一致
- 盡可能生成適合該人物的行程，且時間點與對應行程內容合理，若不合理則更正
- 使用繁體中文
</安排行程規則>
以json回傳，回傳範例格式如下:
{
    "today_schedule": {
        "07:00":"起床，刷牙洗臉",
        "07:30":"吃早餐",
        "08:00":"去該人物職業地點上班或上學",
        "23:00":"上床睡覺"
    }
}
最少生成6條行程，行程越多越好，不需要包含其他內容"""

design_action = """<人物記憶>{memory}</人物記憶>
<人物行程>{schedule}</人物行程>
<觀察事項>{observes}</觀察事項>
<目前地點>{current_location}</目前地點>
<當前時間>{current_time}</當前時間>
<地圖資訊>{map}<地圖資訊>"""
design_action_prompt = """根據提供的所有資訊，為當前時間點決定你接下來要做的動作，遵循以下"動作決定規則"
<動作決定規則>
- 動作描述不要包含自己名字、人物想法、後續行程內容和原因
- 使用繁體中文
<動作決定規則>
以json回傳，回傳範例格式如下:
{
    "action": "該動作描述"
}
不需要包含其他內容"""

transfor_action = """<動作描述>{action_content}</動作描述>
<地圖資訊>{map}<地圖資訊>"""
transfor_action_prompt = """根據輸入的"動作描述"，分析動作內容中執行動作的地點是否是在"地圖資訊"中的地點、是否提到互動人名和是否是在"地圖資訊"中的物件，回傳分析結果，遵循以下"動作轉換規則"
<動作轉換規則>
- 若無與他人互動，"person"回傳"None"
- 若無與物件互動，"object"回傳"None"
- 若"動作描述"中執行動作的地點不包含在"地圖資訊"中，"location"回傳"outside"
- 不要選使用中的物件
- 使用繁體中文
<動作轉換規則>
以json回傳，回傳範例格式如下:
{
    "action": "該動作簡要描述",
    "location": "執行動作地點名稱",
    "person":"互動對象名稱",
    "object": "互動物件名稱"
}
不需要包含其他內容"""

create_thought = """<人物記憶>{memory}</人物記憶>
<人物行程>{schedule}</人物行程>
<觀察事項>{observes}</觀察事項>"""
create_thought_prompt = """根據提供的所有資訊，為當前時間點生成你的想法，用一段話表示，遵循以下"想法規則"
<想法規則>
- 人物想法越詳細越好
- 不須包含自己名字，可包含他人名字
- 使用繁體中文
<想法規則>
以json回傳，回傳範例格式如下:
{
    "thought": "想法內容",
}
不需要包含其他內容"""

check_adjust = """<人物記憶>{memory}</人物記憶>
<人物行程>{schedule}</人物行程>
<觀察事項>{observes}</觀察事項>"""
check_adjust_prompt = """根據提供的所有資訊，判斷是否會影響到"人物行程"，若會影響則回傳True，若不會則回傳False
<範例情況>
原本行程中下午1點到下午5點為上班時間
{
    "07:00": "起床，刷牙、吃早餐",
    "08:30": "去Willow Market藥房上班",
    "12:00": "午餐",
    "13:00": "繼續工作",
    "17:00": "下班回家",
    "18:00": "晚餐",
    "20:00": "開始跑步"
}
後來答應同事下午請假釣魚，則原本的行程須調整，去掉下午上班和下班行程，改為釣魚
{
    "07:00": "起床，刷牙、吃早餐",
    "08:30": "去Willow Market藥房上班",
    "12:00": "午餐",
    "14:00": "請假與同事釣魚",
    "16:30": "收拾釣魚器具準備回家",
    "18:00": "晚餐",
    "20:00": "開始跑步"
}
</範例情況>
以json回傳，回傳範例格式如下:
{
    "need_adjust": bool
}
不需要包含其他內容"""

adjust_routine = """<人物動作歷史>{action_history}</人物動作歷史>
<人物記憶>{memory}</人物記憶>
<人物行程>{schedule}</人物行程>
<觀察事項>{observes}</觀察事項>"""
adjust_routine_prompt = """根據提供的所有資訊，對於"人物行程"進行調整，重新安排行程
以json回傳調整後的行程，回傳範例格式如下:
{
    "adjust_schedule": {
        "07:00":"起床，刷牙洗臉",
        "07:30":"與家人一起吃早餐",
        "08:00":"去<職業地點>上班",
        "23:00":"上床睡覺"
    }
}
不需要包含其他內容，使用繁體中文"""

create_dialogue = """<人物記憶>{memory}</人物記憶>
<人物行程>{schedule}</人物行程>
<觀察事項>{observes}</觀察事項>
<目前地點>{current_location}</目前地點>
<當前時間>{current_time}</當前時間>
<對話歷史>{dialogue_history}</對話歷史>"""
create_dialogue_prompt = """根據你的人物背景和提供的所有資訊，特別是參考"對話歷史"，生成你想說的話，遵循以下"對話規則"
<對話規則>
- 若要結束聊天則結果回傳"<結束對話>"
- 使用繁體中文
</對話規則>
以json回傳，回傳範例格式如下:
{
    "dialogue": ""
}"""

organize = """<人物記憶>{memory}</人物記憶>
<觀察事項>{observes}</觀察事項>
<對話歷史>{dialogue_history}</對話歷史>"""
organize_prompt = """根據你的人物背景和提供的所有資訊，將其中你認為重要的事情整理成條列式的內容作為記憶，遵循以下<整理記憶規則>
<整理記憶規則>
- 按照對你的重要程度排序，最重要的記憶排第一
- 使用繁體中文
</整理記憶規則>
以json回傳，回傳範例格式如下:
{
    "memory": [
        {"1": "重要事情描述"},
        ...
    ]
}
"""

reflection = """<人物記憶>{memory}</人物記憶>
<觀察事項>{observes}</觀察事項>
<對話歷史>{dialogue_history}</對話歷史>
"""
reflection_prompt = """根據今天發生的所有資訊以及人物資訊，反思你的人物背景資訊使否有需要調整或補充的地方，針對其中職業、興趣、人物特質、角色描述和人際關係進行判別，遵循以下"反思改動規則"
<反思改動規則>
- 若判斷無須改動或補充則回傳原描述
- 改動幅度不能太大
- 若有需要補充內容，可改寫成通順的描述
- 人際關係列表格式為{"name":"","relationship":""}
- 使用繁體中文
</反思改動規則>
以json回傳，回傳範例格式如下:
{
    "job_occupation": "",
    "interests": "",
    "personality": "",
    "character_description": "",
    "interpersonal_relationships": []
}"""